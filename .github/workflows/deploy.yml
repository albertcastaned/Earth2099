name: Integracion Continua ðŸ˜Ž

on:
  push: { branches: [develop, master, ci] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  createRelease:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: tag
        name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v4.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: ci
      - run: git log $(git describe --tags --abbrev=0)..HEAD --no-merges --oneline > git.log
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          body_path: git.log
          draft: true
          prerelease: true

  buildForSomePlatforms:
    needs: createRelease
    name: Compilando para ${{ matrix.targetPlatform }}âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        projectPath: 
          - Mango
        targetPlatform:
        #  - WebGL
          - StandaloneOSX
          - StandaloneWindows64
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2.1.2
        with:
          path: Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      # Build
      - name: Build project
        uses: webbertakken/unity-builder@v1.3
        with:
          unityVersion: 2019.4.8f1
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: Mango
          buildName: Earth2099

      - run: tar -czvf Earth2099-${{ matrix.targetPlatform}}.tar /build/${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Earth2099-${{ matrix.targetPlatform }}
          path: Earth2099-${{ matrix.targetPlatform}}.tar

      # Release
      - uses: actions/upload-release-asset@v1
        if: ${{ matrix.targetPlatform != 'WebGL' }}
        name: Upload Release Asset
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createRelease.outputs.upload_url }}
          asset_path: Earth2099-${{ matrix.targetPlatform}}.tar
          asset_name: Earth2099-${{ matrix.targetPlatform}}
          asset_content_type: application/tar

      #- name: Deploy ðŸš€
       # if: ${{ matrix.targetPlatform == 'WebGL' }}
        #uses: JamesIves/github-pages-deploy-action@3.6.2
        #with:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #BRANCH: gh-pages # The branch the action should deploy to.
          #FOLDER: build/WebGL/WebGL # The folder the action should deploy.
          #CLEAN: true # Automatically remove deleted files from the deploy branch